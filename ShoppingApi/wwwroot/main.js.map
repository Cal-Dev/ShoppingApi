{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4E;;;;;;;;;;;ACZA,6RAA6R,iDAAiD,eAAe,gHAAgH,cAAc,uDAAuD,kBAAkB,yDAAyD,eAAe,yRAAyR,WAAW,MAAM,YAAY,4L;;;;;;;;;;;ACAl6B,+DAA+D,+H;;;;;;;;;;;;;;;;;;ACAZ;AACD;AAQlD;IASE,sBAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QARpC,UAAK,GAAG,WAAW,CAAC;QACpB,YAAO,GAAG,EAAE,CAAC;QACb,aAAQ,GAAI,EAAE,CAAC;QACf,SAAI,GAAG,EAAE;QACX,cAAS,GAAG,UAAU,IAAI;YACxB,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAEvB,CAAC;IAEC,CAAC;IACD,+BAAQ,GAAR;QAAA,iBAWC;QAJC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAU,eAAe,CAAC,CAAC,SAAS,CAAC,cAAI;YACpD,KAAI,IAAI,CAAC,IAAI,IAAI;gBAAI,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;YAClD,uBAAuB;QACvB,CAAC,CAAC,CAAC;IACL,CAAC;IAtBU,YAAY;QALxB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;YACpB,yFAAmC;;SAEpC,CAAC;+EAU0B,+DAAU;OATzB,YAAY,CAwBxB;IAAD,mBAAC;CAAA;AAxBwB;;;;;;;;;;;;;;;;;;;;;ACTiC;AACjB;AACe;AACT;AAa/C;IAAA;IAAyB,CAAC;IAAb,SAAS;QAXrB,8DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,2DAAY;aACb;YACD,OAAO,EAAE;gBACP,uEAAa;gBACb,qEAAgB;aACjB;YACD,SAAS,EAAE,EAAE;YACb,SAAS,EAAE,CAAC,2DAAY,CAAC;SAC1B,CAAC;OACW,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAJ;;;;;;;;;;;;;AChBtB;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAAA;AAAA;AAA+C;AAC4B;AAE9B;AACY;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,KAAK,CAAC,GAAG,CAAC,EAAlB,CAAkB,CAAC,CAAC","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"jumbotron\\\">\\n    <h1>Shopping App</h1>\\n    <h2>Welcome to our shopping app </h2>\\n  </div>\\n\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col\\\" *ngFor=\\\"let product of results\\\">\\n      <div class=\\\"card\\\" style=\\\"width: 18rem;\\\">\\n        <img class=\\\"card-img-top\\\" src=\\\"{{product.photo}}\\\" alt=\\\"Card image cap\\\">\\n        <div class=\\\"card-body\\\">\\n          <h5 class=\\\"card-title text-center\\\">{{product.name}}</h5>\\n          <p class=\\\"card-text text-center\\\"> {{product.category}} </p>\\n          <h5 class=\\\"card-title text-right\\\"> ${{product.price}}</h5>\\n          <a href=\\\"#\\\" class=\\\"btn btn-primary\\\" (click)=\\\"this.addToCart(product)\\\">Add to Cart</a>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n\\n<div class=\\\"row\\\">\\n  <div class=\\\"col\\\">\\n    <h2> Cart: </h2>\\n    <div *ngFor=\\\"let item of cart\\\">\\n          {{item.name}} - ${{item.price}}\\n      </div>\\n    </div>\\n\\n</div>\\n\\n  <!-- <div class=\\\"panel panel-primary\\\">\\n    <div class=\\\"panel-body\\\">\\n      <h3>Mechanical\\n      </h3>\\n    </div>\\n  </div> -->\\n\\n</div>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component , OnInit } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { createWiresService } from 'selenium-webdriver/firefox';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent implements OnInit {\r\n  title = 'shopping2';\r\n  results = [];\r\n  products  = '';\r\n  cart = []\r\naddToCart = function (item){\r\n  this.cart.push(item);\r\n\r\n}\r\n  constructor(private http: HttpClient) {\r\n  }\r\n  ngOnInit() : void {\r\n\r\n    interface Product {\r\n      name:string;\r\n      category:string;\r\n      price:number;\r\n    }\r\n    this.http.get<Product>('/api/Products').subscribe(data => {\r\n      for(let i in data)   this.results.push(data[i]);\r\n    //this.results = data ;\r\n    });\r\n  }\r\n\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}